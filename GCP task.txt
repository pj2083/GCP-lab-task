Task-1
gcloud compute instances create nucleus-jumphost --machine-type f1-micro  --zone us-east1-b

Task 2
1)gcloud config set compute/zone  us-east1-b
2)gcloud container clusters create my-cluster
3)gcloud container clusters get-credentials my-cluster
4)kubectl create deployment hello-server --image=gcr.io/google-samples/hello-app:1.0
5)kubectl expose deployment hello-server --type=LoadBalancer --port 8080
6)kubectl get service
7)http://[EXTERNAL-IP]:8080 (Replace external ip with your ip)
Task-3
1)cat << EOF > startup.sh
#! /bin/bash
apt-get update
apt-get install -y nginx
service nginx start
sed -i -- 's/nginx/Google Cloud Platform - '"\$HOSTNAME"'/' /var/www/html/index.nginx-debian.html
EOF
2)
gcloud compute instance-templates create web-server-template \
          --metadata-from-file startup-script=startup.sh \
          --network nucleus-vpc \
          --machine-type g1-small \
          --region us-east1
3) gcloud compute instance-groups managed create lb-backend-group \
   --template=lb-backend-template --size=2 --zone=us-east1-b-a
4) gcloud compute firewall-rules create fw-allow-health-check \
    --network=default \
    --action=allow \
    --direction=ingress \
    --source-ranges=130.211.0.0/22,35.191.0.0/16 \
    --target-tags=allow-health-check \
    --rules=tcp:80
5)    gcloud compute health-checks create http http-basic-check \
        --port 80
6)    gcloud compute backend-services add-backend web-backend-service \
        --instance-group=lb-backend-group \
        --instance-group-zone=us-central1-a \
        --global
7)    gcloud compute url-maps create web-map-http \
        --default-service web-backend-service
8)    gcloud compute target-http-proxies create http-lb-proxy \
        --url-map web-map-http
9)    gcloud compute forwarding-rules create http-content-rule \
        --address=lb-ipv4-1\
        --global \
        --target-http-proxy=http-lb-proxy \
        --ports=80



